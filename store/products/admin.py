from django.contrib import admin
# Импортируем наши модели.
from products.models import ProductCategory, Product, Basket

# Register your models here.
# Регистрируем модели в админ панели.
admin.site.register(ProductCategory)


# Указываем через декоратор с какой моделью будет работать данный класс.
@admin.register(Product)
class ProductAdmin(admin.ModelAdmin):
    # Данное поле отвечает за то, как мы хотим видеть все продукты в админ-панели. Указываем нужные нам поля.
    list_display = ('name', 'price', 'quantity', 'category')
    # Чтобы всё выглядело нормально при создании или изменение объекта, то используем переменную fields.
    # Каждое поле будет начинаться с новой строки, но можно сделать, чтобы некоторые поля находились на одной строке,
    # для этого достаточно в кортеже сделать ещё один кортеж. Можно менять порядок полей.
    fields = ('name', 'description', ('price', 'quantity'), 'image', 'category')
    # Переменная будет доступна только для чтения.
    readonly_fields = ('description',)
    # Данная переменная позволяет осуществлять поиск по указанному полю.
    search_fields = ('name',)
    # Если нужно отсортировать объекты в определённом порядке, например, в алфавитном, то используем данную переменную.
    # Если нам нужен обратный алфавитный порядок, то достаточно перед названием поля поставить -.
    ordering = ('name',)


# Добавляем корзину в админ-панель.
# По умолчанию каждый объект пользователя будет отображаться в админ-панели, чтобы объединить все объекты одного
# пользователя необходимо использовать TabularInline.
# Корзину будем отображать в админке пользователя. Импортируем её.
class BasketAdmin(admin.TabularInline):
    # Указываем, что работа будет производиться с моделью корзины.
    model = Basket
    # Последнее поле создаётся только в самом начале и не должно никак изменяться, поэтому после добавления его в поля
    # для отображения необходимо указать, что оно будет доступно только для чтения.
    fields = ('product', 'quantity', 'created_timestamp')
    readonly_fields = ('created_timestamp',)
    # Данная переменная указывает количество дополнительных полей для отображения.
    extra = 0

